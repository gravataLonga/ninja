
// Assing var
var ok = assert("Assign var a = 0", function() {
    var a = 0;
    return a == 0;
});


// Reassign var
var ok = assert("Reassign var a = 0", function() {
    var a = 0;
    a = 1;
    return a == 1;
});

var tests = [
    {"expression": 1 + 1, "total": 2, "name": "(1 + 1)"},
    {"expression": 1 + 2 * 1, "total": 3, "name": "(1 + 2 * 1)"},
    {"expression": 2 / 2 * 1, "total": 1, "name": "(2 / 2 * 1)"},
    {"expression": 2 / 2 * 1 - 20, "total": -19, "name": "(2 / 2 * 1 - 20)"},
    {"expression": 4 % 2, "total": 0, "name": "(4 % 2)"},
    {"expression": 100 / 8, "total": 12.5, "name": "(100 / 8)"},
    {"expression": 100 ** 2, "total": 10000, "name": "(100 ** 0)"},
    {"expression": 5 ** 2 ** 2 , "total": 10000, "name": "(5 ** (2 ** 2))"},
    {"expression": 8 & 2 , "total": 0, "name": "(8 & 2)"},
    {"expression": 8 | 2 , "total": 10, "name": "(8 | 2)"},
    {"expression": 8 ^ 2 , "total": 10, "name": "(8 ^ 2)"},
    {"expression": 8 << 2 , "total": 32, "name": "(8 << 2)"},
    {"expression": 8 >> 2 , "total": 2, "name": "(8 >> 2)"},
    {"expression": 1e3, "total": 1000, "name": "1e3"},
    {"expression": "\u006E\u0069\u006E\u006A\u0061", "total": "ninja", "name": "\\u006E\\u0069\\u006E\\u006A\\u0061"}
];

for (var t = 0; t <= len(tests) - 1; t = t + 1) {
    var expression = tests[t]["expression"];
    var total = tests[t]["total"];
    var name = tests[t]["name"];

    if (expression != total) {
        var ok = assert("Operations expected: " + total + " Got: " + expression + " in " + name, assertFalse);
    } else {
        var ok = assert("Operations " + name, assertTrue);
    }
}
